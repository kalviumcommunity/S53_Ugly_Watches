"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
var react_1 = __importStar(require("react"));
var easeIn = function (t, alpha) { return Math.pow(t, alpha); };
var getMask = function (opacity) { return "linear-gradient(180deg, black, rgba(255, 255, 255, " + opacity + ")) center bottom/100%\n    56px no-repeat,\nlinear-gradient(180deg, black, black) center top/100% calc(100% - 56px)\n    no-repeat"; };
var ScrollFade = function () {
    var rootRef = react_1.useRef(null);
    var onScroll = react_1.useCallback(function () {
        var _a;
        var scrollElement = (_a = rootRef.current) === null || _a === void 0 ? void 0 : _a.parentElement;
        if (scrollElement) {
            var elementHeight = scrollElement.offsetHeight, elementWidth = scrollElement.scrollHeight, scrollTop = scrollElement.scrollTop;
            var opacity = easeIn(scrollTop / (elementHeight - elementWidth), 10);
            var mask = getMask(opacity);
            scrollElement.style.mask = mask;
            scrollElement.style.webkitMask = mask;
        }
    }, []);
    react_1.useEffect(function () {
        var _a;
        var scrollElement = (_a = rootRef.current) === null || _a === void 0 ? void 0 : _a.parentElement;
        if (scrollElement) {
            var offsetHeight = scrollElement.offsetHeight, scrollHeight = scrollElement.scrollHeight;
            if (offsetHeight !== scrollHeight) {
                var mask = getMask(0);
                scrollElement.style.mask = mask;
                scrollElement.style.webkitMask = mask;
            }
            scrollElement.addEventListener('scroll', onScroll);
            return function () { return scrollElement.removeEventListener('scroll', onScroll); };
        }
    }, []);
    return react_1.default.createElement("div", { className: "scroll-fade", ref: rootRef });
};
exports.default = ScrollFade;
//# sourceMappingURL=ScrollFade.js.map